from aiogram import Dispatcher, types


def register_help_handlers(dp: Dispatcher):
    from states.user.add_new_olympiad import AddOlympiad
    from states.user.change_interests import AddNewInterests
    from states.user.feedback import AddQuestion
    from states.user.registration import Registration
    dp.register_message_handler(registration_help, commands=['help'], state=Registration.all_states)
    dp.register_message_handler(add_olympiad_help, commands=['help'], state=AddOlympiad.all_states)
    dp.register_message_handler(change_interests_help, commands=['help'], state=AddNewInterests.all_states)
    dp.register_message_handler(admin_message_help, commands=['help'], state=AddQuestion.all_states)
    dp.register_message_handler(menu_help, commands=['help'])


async def menu_help(message: types.Message):
    text = "Здесь собраны все функции данного бота." \
           "\n\n" \
           "В разделе 'Личные данные' можно добавить и удалить предметы, по которым бот автоматически будет " \
           "отслеживать все олимпиады за ваш класс, а так же поменять время, в которое вам будут приходить " \
           "напоминания." \
           "\n\n" \
           "В разделе 'Олимпиады' вы можете посмотреть за какими олимпиадами в данный момент происходит " \
           "отслеживание, нажав на любую из них можно получить информацию о ней,перейти на связанные сайты, " \
           "отметиться о прохождении или регистрации или получить ключ. Подменю 'Добавить новые олимпиады' позволит " \
           "выбрать любую олимпиаду за интересующий вас класс и добавить ее к себе." \
           "\n\n" \
           "В разделе 'Обратная связь' можно задать вопрос руководителю олимпиадного движения. Его увидят сразу, " \
           "и как только будет получен ответ, вам придет уведомление." \
           "\n\n" \
           "Важно: на момент прохождения олимпиады мы не всегда можем получить точную информацию от оргкомитета и " \
           "хотя подтвердить регистрацию или выполнение олимпиады вы можете даже не делая этого, просьба не делать " \
           "этого. Спустя некоторое время после прохождения олимпиады школе доступа полная информация об " \
           "участниках, и данная функция лишь помогает нам оперативно анализировать текущую ситуацию." \
           "\n\n" \
           "Надеемся на ваше понимание."
    await message.answer(text=text)


async def registration_help(message: types.Message):
    text = "Это вступительный этап при работе с дынным ботом. Вам необходимо будет ввести свое имя, фамилию, " \
           "информацию о классе." \
           "\n\n" \
           "Далее надо выбрать какими предметами вы интересуетесь, это нужно для того, " \
           "чтобы бот сам добавлял вам олимпиады в отслеживаемые. Для выбора предмета просто нажмите на него, " \
           "в верхней части экрана появиться фраза 'запомним', чтобы продвинуться дальше нажмите 'готово'. В " \
           "последствие эти предметы можно изменить в меню 'Личные данные'." \
           "\n\n" \
           "Время уведомления - это промежуток, в который вам будет присылаться уведомления перед началом и " \
           "окончанием выбранных олимпиад. "
    await message.answer(text=text)


async def change_interests_help(message: types.Message):
    text = "Добавьте предметы, которыми интересуетесь. Для выбора предмета просто нажмите на него, в верхней части " \
           "экрана появиться фраза 'запомним'. Когда закончите, нажмите 'готово'. "
    await message.answer(text=text)


async def add_olympiad_help(message: types.Message):
    text = "Чтобы добавить олимпиаду сначала выберите предмет: нажмите на нужный, а после кнопку 'готово'. Вам будет " \
           "предложен список доступных олимпиад по выбранному предмету, нажав на нужную из них выберите класс, " \
           "за который хотите ее писать."
    await message.answer(text=text)


async def admin_message_help(message: types.Message):
    text = "Наберите сообщение на клавиатуре, вам вопрос будет зарегистрирован, о чем вам сообщит бот. Администраторы " \
           "сразу увидят ваше обращение и ответят на него. Как только это произойдет вам будет прислан ответ. "
    await message.answer(text=text)
